############################################################################
# Unbindings
############################################################################
# unbind C-b # unbind default leader key


# Bindings
################################################################################

# reload tmux conf
bind-key r source-file ~/.tmux.conf


# break-pane
# unbind '!'
# bind-key Enter break-pane

# Panefull stuff
# TODO: how do I d this with choose-tree?
bind-key Space list-panes # list panes
bind-key M-h command-prompt "move-pane -hb -t:%%" # move pane to window.pane
bind-key M-j command-prompt "move-pane -t:%%" # move pane to window.pane
bind-key M-k command-prompt "move-pane -b -t:%%" # move pane to window.pane
bind-key M-l command-prompt "move-pane -h -t:%%" # move pane to window.pane

# Vim-style copy/paste
#
# CTRL-B [: start visual mode
# CTRL-B /: search
# CTRL-B ]: paste
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
unbind '='
bind-key 'p' command-prompt "choose-buffer"

set-window-option -g window-status-current-bg red
bind J previous-window
bind K next-window
bind t new-window

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

# Navigate panes
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

# Resize panes
bind-key < resize-pane -L 5
bind-key - resize-pane -D 5
bind-key + resize-pane -U 5
bind-key > resize-pane -R 5

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind '"'
bind s split-window -v
unbind %
bind v split-window -h


# Global options
################################################################################

# large history
set-option -g history-limit 10000

# basic settings
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse

# Automatically set window title
setw -g automatic-rename

# use mouse # More on mouse support:
# http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
set -g mouse on

# Style
################################################################################

#Status Bar

set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=green]#S»#{window_name}»#D #{cursor_y} #[default] --'
set-option -g status-right '#[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Client title
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
