" ------------------------------------------------------------------------------
" Display
" ------------------------------------------------------------------------------

  syntax enable

  set t_Co=256
  set number
  set scrolloff=10        " display at least 10 lines of context around cursor
  set list
  set showmatch
  set showmode
  set ruler
  set hlsearch
  set nowrap              " wrap if text is too long to display
  set colorcolumn=80      " make sure lines don't go over 80 columns
  " set background=dark
  colorscheme +twilight_dark
  " resize current window to 85 lines
  let &winwidth = 87
  highlight OverLength ctermbg=red ctermfg=white guibg=#592929
  "match OverLength /\%91v.\+/

  " Display <tab>s, etc.
  set nolist
  "set listchars=tab:>-,trail:.,nbsp:_,eol:$



" ------------------------------------------------------------------------------
" Syntax
" ------------------------------------------------------------------------------

  " Default Indentation
  set expandtab           " Turn tabs to spaces
  set shiftwidth=2        " Make indentation 4 spaces
  set softtabstop=2
  set tabstop=2
  " use :retab to reformat all existing tabs in a file

  " By Filetype
  if has ("autocmd")
    " Syntax
    autocmd BufNewFile,BufRead *.scss.erb setfiletype scss
    autocmd BufNewFile,BufRead *.coffee.erb setfiletype coffee
    autocmd BufNewFile,BufRead *.asm setfiletype nasm
    autocmd BufNewFile,BufRead *.jade setfiletype jade
    autocmd BufNewFile,BufRead *.s setfiletype armasm
    autocmd BufNewFile,BufRead *.rss,*.atom setfiletype xml
    autocmd BufNewFile,BufRead *.hbs,*.erb,*.ejs,*.html setfiletype html
    autocmd BufNewFile,BufRead *.rabl setfiletype ruby
    autocmd BufNewFile,BufRead *.coffee setfiletype coffee
    autocmd BufNewFile,BufRead *.rs setfiletype rust
    autocmd BufNewFile,BufRead *.elm setfiletype elm
    autocmd BufNewFile,BufRead *.es6 setfiletype javascript
    autocmd BufNewFile,BufRead *.r,*.r3,*.red,*.reds setfiletype rebol
""    autocmd BufNewFile,BufRead *.md, *.markdown setfiletype markdown
    " Indentation
    autocmd Filetype make setlocal shiftwidth=8 softtabstop=8 tabstop=8 noexpandtab
    autocmd Filetype python setlocal shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd Filetype nasm setlocal shiftwidth=8 softtabstop=8 tabstop=8 expandtab
    autocmd Filetype armasm setlocal shiftwidth=8 softtabstop=8 tabstop=8 expandtab
    autocmd Filetype sql setlocal shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd Filetype javascript setlocal shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd Filetype markdown setlocal shiftwidth=2 softtabstop=2 tabstop=2 expandtab
    autocmd Filetype c setlocal shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd Filetype xml setlocal shiftwidth=4 softtabstop=4 tabstop=4 expandtab
    autocmd Filetype html setlocal shiftwidth=2 softtabstop=2 tabstop=2 expandtab
  endif


" ------------------------------------------------------------------------------
" Sessions
" ------------------------------------------------------------------------------

  nnoremap <leader>S <Esc>:mksession! session-

" ------------------------------------------------------------------------------
" Editing Functionality
" ------------------------------------------------------------------------------

  set autoindent
  " Real men don't use mouse
  set mouse=a
  set foldmethod=indent
  set foldlevel=99



" ------------------------------------------------------------------------------
" Key Maps
" ------------------------------------------------------------------------------

  " Esc while ssh'ing from iPad
  " inoremap qq <Esc>

  " Change windows from insert mode
  inoremap <C-W>W <Esc><C-W><C-W>

  " Easy window change
  nnoremap <C-H> <C-W><left>
  nnoremap <C-J> <C-W><down>
  nnoremap <C-K> <C-W><up>
  nnoremap <C-L> <C-W><right>
  nnoremap <C-T> <Esc>:tabnew<Cr>
  nnoremap J <Esc>gT
  nnoremap K <Esc>gt
  " Easy split
  nnoremap <leader>v <Esc>:vsplit<Cr>
  nnoremap <leader>s <Esc>:split<Cr>

  " Move right (to jump out of brackets or quotes)
  inoremap <C-l> <Right>
  inoremap <C-]> <Esc>$a
  
  inoremap <C-/> <Esc>:noh<Cr>

  " search files. :cw to view list of matches.
  nnoremap <C-F>a <Esc>:vimgrep<Space>
  nnoremap <C-F>r <Esc>:%s//gc<Left><Left><Left>



" ------------------------------------------------------------------------------
" Opening and cloising braces, etc.
" ------------------------------------------------------------------------------

  " Opening and closing braces
  inoremap {} {}<Esc>i
  inoremap }{ <Esc>$a<Space>{<CR>}<Esc>O<Tab>
  inoremap {: <Esc>$a<Space>{<CR>};<Esc>O<Tab>
  inoremap () ()<Esc>i
  inoremap )( <Esc>$a<Space>(<CR>)<Esc>O<Tab>
  inoremap [] []<Esc>i
  inoremap <Bar><Bar> <Bar><Bar><Esc>i
  inoremap " ""<Esc>i
  inoremap '' ''<Esc>i
  inoremap <> <lt>><Esc>i
  inoremap ;; <Esc>$a;
  " arrows
  inoremap >> ->
  inoremap ?> =>
  " ruby do ... end
  inoremap <C-E> <Esc>oend<Esc>O<Tab>
  inoremap <C-\> <Esc>$a<Space>do<Space><Bar><Bar><CR>end<Esc>k$i
  " ruby erb opening and closing <%= >
  inoremap ><lt> <lt>%=<Space><Space>%><Esc>hhi


" ------------------------------------------------------------------------------
" Multipurpose Tab Key lifted from  Gary Bernhardt's vimrc:
"
" Tab key inserts tab if at beginning of line. Else do autocomplete.
" (Use CTRL-I if tabs are necessary within text)
" ------------------------------------------------------------------------------

  function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
      return "\<tab>"
    else
      return "\<c-p>"
    endif
  endfunction
  inoremap <Tab> <c-r>=InsertTabWrapper()<CR>



" ------------------------------------------------------------------------------
" Misc
" ------------------------------------------------------------------------------

  set warn
  set viewdir=$HOME/.vimviews/
  set autoprint
  set report=1
  set history=100



" ------------------------------------------------------------------------------
" Plugins Stuff
" ------------------------------------------------------------------------------

  " Powerline
  set nocompatible        " NOTE: vundle also needs this
  set t_Co=256            " Tell Vim that terminal supports 256 colors
  set laststatus=2        " Always show the statusline
  set encoding=utf-8      " Necessary to show unicode gylphs

  " Call NERDtree
  noremap <C-N> <Esc>:NERDTreeToggle<CR>
  inoremap <C-N> <Esc>:NERDTreeToggle<CR>

  " Filetype plugin for NERDCommenter
  filetype plugin on

  " CtrlP
  nnoremap <C-F>f <Esc>:CtrlP<Cr>
  nnoremap <C-F>u <Esc>:CtrlPClearAllCaches<Cr>

  " Indent guides
  "let g:indent_guides_enable_on_vim_startup = 1

  " MiniBufExpl
  let g:miniBufExplorerAutoStart = 0
  noremap <C-B> <Esc>:MBEFocus<Enter>

  " ShowMarks
  nnoremap <leader>m <Esc>:DoShowMarks!<Cr>
  nnoremap <leader>M <Esc>:NoShowMarks!<Cr>

  " Whitespace
  nnoremap <leader>r$ <Esc>:FixWhitespace<Cr>

" Vundle.vim stuff:
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Bundle 'scrooloose/nerdtree'
Bundle 'Lokaltog/vim-powerline'
Bundle 'kien/ctrlp.vim'
Bundle 'vim-scripts/ScrollColors'
Bundle 'nathanaelkane/vim-indent-guides'
Bundle 'https://github.com/tpope/vim-surround.git'
Bundle 'https://github.com/godlygeek/csapprox'
Bundle "https://github.com/kchmck/vim-coffee-script.git"
Bundle 'wting/rust.vim'
Bundle 'https://github.com/vim-scripts/armasm.git'
Bundle 'https://github.com/jacquesbh/vim-showmarks.git'
Bundle 'bronson/vim-trailing-whitespace'

" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'

" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'

" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin on    " required
